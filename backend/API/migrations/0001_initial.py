# Generated by Django 5.1.1 on 2024-10-06 15:46

import API.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bin",
            fields=[
                ("bin_id", models.AutoField(primary_key=True, serialize=False)),
                ("bin_name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Courier",
            fields=[
                ("courier_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                ("invoice_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "invoice_pdf",
                    models.FileField(
                        blank=True, null=True, upload_to=API.models.dynamic_upload_path
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("paid", models.BooleanField(default=False)),
                (
                    "date_created",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("date_paid", models.DateField(blank=True, null=True)),
                ("due_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OrderCategory",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                ("category_name", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="UngatingImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.CharField(max_length=20)),
                ("item_id", models.CharField(max_length=20)),
                ("service_code", models.IntegerField()),
                ("category_id", models.IntegerField()),
                (
                    "image",
                    models.ImageField(upload_to=API.models.UngatingImage.path_to_image),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Balance",
            fields=[
                ("balance_id", models.AutoField(primary_key=True, serialize=False)),
                ("balance", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompletedTasks",
            fields=[
                ("task_id", models.AutoField(primary_key=True, serialize=False)),
                ("service_id", models.IntegerField(blank=True, null=True)),
                ("item_id", models.IntegerField(blank=True, null=True)),
                ("service_code", models.IntegerField(blank=True, null=True)),
                ("category_id", models.IntegerField(blank=True, null=True)),
                ("assigned_date", models.DateTimeField()),
                (
                    "completed_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_assigned_by_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_assigned_to_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "item_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("item_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("client_id", "item_id")},
            },
        ),
        migrations.CreateModel(
            name="BundleOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.IntegerField()),
                ("item_id", models.CharField(max_length=20)),
                ("service_code", models.IntegerField()),
                ("category_id", models.IntegerField()),
                ("quantity_from_inventory", models.IntegerField(blank=True, null=True)),
                (
                    "quantity_from_recent_received",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "quantity_from_new_shipment",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "other_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="second_item",
                        to="API.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LogRecord",
            fields=[
                ("check_in_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "check_in_time",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("check_out_time", models.DateTimeField(blank=True, null=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logrecord_user_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("boxes", models.IntegerField(default=0)),
                (
                    "charge_by",
                    models.CharField(
                        choices=[("Box", "Box"), ("Unit", "Unit")],
                        default="Unit",
                        max_length=10,
                        verbose_name="Charge By",
                    ),
                ),
                ("pallet", models.BooleanField(default=False)),
                (
                    "bin_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="Inventory_bin_id",
                        to="API.bin",
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="Inventory_item_id",
                        to="API.item",
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="Inventory_category_id",
                        to="API.ordercategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Discard",
            fields=[
                ("discard_id", models.AutoField(primary_key=True, serialize=False)),
                ("date_added", models.DateTimeField()),
                (
                    "date_discarded",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("quantity", models.IntegerField()),
                ("dimension_id", models.IntegerField(null=True)),
                ("boxes", models.IntegerField(default=0)),
                (
                    "bin_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discard_bin_id",
                        to="API.bin",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discard_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discard_item_id",
                        to="API.item",
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discard_category_id",
                        to="API.ordercategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OTP_user_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PalletDimension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.IntegerField(blank=True, null=True)),
                ("item_id", models.CharField(blank=True, max_length=20, null=True)),
                ("service_code", models.IntegerField(blank=True, null=True)),
                ("category_id", models.IntegerField(blank=True, null=True)),
                ("length", models.IntegerField()),
                ("width", models.IntegerField()),
                ("height", models.IntegerField()),
                ("weight", models.DecimalField(decimal_places=2, max_digits=6)),
                ("shipped", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "shipped_date",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("pallet_label", models.FileField(blank=True, null=True, upload_to="")),
                (
                    "inventory_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="API.inventory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dimension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.IntegerField(blank=True, null=True)),
                ("item_id", models.CharField(blank=True, max_length=20, null=True)),
                ("service_code", models.IntegerField(blank=True, null=True)),
                ("category_id", models.IntegerField(blank=True, null=True)),
                ("length", models.IntegerField()),
                ("width", models.IntegerField()),
                ("height", models.IntegerField()),
                ("weight", models.DecimalField(decimal_places=2, max_digits=6)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                ("shipped", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "shipped_date",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("box_label", models.FileField(blank=True, null=True, upload_to="")),
                (
                    "Inventory_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="API.inventory",
                    ),
                ),
                (
                    "pallet",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="API.palletdimension",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Received",
            fields=[
                (
                    "tracking_id",
                    models.CharField(max_length=32, primary_key=True, serialize=False),
                ),
                ("date_received", models.DateTimeField(null=True)),
                ("completed", models.BooleanField(default=False)),
                ("assigned", models.BooleanField(default=False)),
                (
                    "client_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_category_category_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Received_Service",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("service_id", models.CharField(max_length=20)),
                ("item_id", models.CharField(max_length=20)),
                ("service_code", models.IntegerField()),
                ("category_id", models.IntegerField()),
                (
                    "tracking_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_received_service",
                        to="API.received",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReceivedImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to=API.models.ReceivedImage.path_to_image),
                ),
                (
                    "received",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="API.received",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Removal",
            fields=[
                ("removal_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateTimeField(default=django.utils.timezone.now)),
                ("quantity", models.IntegerField(null=True)),
                ("dimension_id", models.IntegerField(null=True)),
                ("boxes", models.IntegerField(default=0)),
                (
                    "bin_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="removal_bin_id",
                        to="API.bin",
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="removal_category_id",
                        to="API.ordercategory",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="removal_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="removal_item_id",
                        to="API.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                ("service_code", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=10)),
                ("charges", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_category_category_id",
                        to="API.ordercategory",
                    ),
                ),
            ],
            options={
                "unique_together": {("service_code", "category_id")},
            },
        ),
        migrations.CreateModel(
            name="CustomRates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("charges", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_rates_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_rates_category_id",
                        to="API.ordercategory",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_rates_service_code",
                        to="API.servicecategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_preference_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_preference_category_id",
                        to="API.ordercategory",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sclient_preference_ervice_code",
                        to="API.servicecategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShipmentDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.CharField(max_length=20)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                (
                    "fnsku",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=API.models.ShipmentDetails.path_to_file_fnsku,
                    ),
                ),
                (
                    "box_label",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=API.models.ShipmentDetails.path_to_file_fba,
                    ),
                ),
                ("placed_date", models.DateTimeField()),
                (
                    "active_service_start_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "service_provided_date",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("from_inventory", models.BooleanField(default=False)),
                ("dispute", models.BooleanField(default=False)),
                ("dispute_note", models.CharField(max_length=100, null=True)),
                ("bundle", models.BooleanField(default=False, null=True)),
                ("order_notes", models.CharField(max_length=100, null=True)),
                ("pallet", models.BooleanField(default=False, null=True)),
                (
                    "category_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Shipment_detail_category_id",
                        to="API.ordercategory",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Shipment_detail_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Shipment_detail_item_id",
                        to="API.item",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Shipment_detail_service_code",
                        to="API.servicecategory",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("service_id", "service_code", "item_id", "category_id")
                },
            },
        ),
        migrations.CreateModel(
            name="Charges",
            fields=[
                ("charge_id", models.AutoField(primary_key=True, serialize=False)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "date_charged",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="charges_client",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="charges_invoice_id",
                        to="API.invoice",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="charges_service_code",
                        to="API.servicecategory",
                    ),
                ),
                (
                    "service_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="charges_service_id",
                        to="API.shipmentdetails",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("task_id", models.AutoField(primary_key=True, serialize=False)),
                ("service_id", models.IntegerField(blank=True, null=True)),
                ("item_id", models.IntegerField(blank=True, null=True)),
                ("service_code", models.IntegerField(blank=True, null=True)),
                ("category_id", models.IntegerField(blank=True, null=True)),
                (
                    "assigned_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("recurring", models.BooleanField(default=False)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_by_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_to_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("transaction_id", models.AutoField(primary_key=True, serialize=False)),
                ("client_id", models.IntegerField()),
                ("date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "invoice_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="API.invoice"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserCourier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_courier_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "courier_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_courier_courier_id",
                        to="API.courier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UsersExtended",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "email2",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Secondary Email",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Owner", "Owner"),
                            ("Manager", "Manager"),
                            ("Virtual Assistant", "Virtual Assistant"),
                            ("Prep Team", "Prep Team"),
                            ("Lower Staff", "Lower Staff"),
                            ("Client", "Client"),
                        ],
                        default="Client",
                        max_length=50,
                        verbose_name="Role",
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Tax ID"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Address",
                    ),
                ),
                (
                    "billing_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Monthly", "Monthly"),
                            ("Bimonthly", "Bimonthly"),
                        ],
                        default="Monthly",
                        max_length=10,
                        null=True,
                        verbose_name="Billing Type",
                    ),
                ),
                (
                    "llc_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="LLC Name",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=30,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=30,
                        null=True,
                        verbose_name="City",
                    ),
                ),
                (
                    "zip",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Zip Code"
                    ),
                ),
                (
                    "date_created",
                    models.DateField(default=django.utils.timezone.now, null=True),
                ),
                ("last_logout", models.DateTimeField(blank=True, null=True)),
                (
                    "username",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extended",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Username",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.CharField(max_length=20)),
                (
                    "no_bundles",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
                (
                    "bundle_quantity",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
                (
                    "additional_service",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "additional_format",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "additional_format_text",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "additional_format_file",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=API.models.ServiceDetail.pdf_directory_path_additional,
                    ),
                ),
                ("active", models.BooleanField(blank=True, default=False, null=True)),
                ("quantity_from_inventory", models.IntegerField(blank=True, null=True)),
                (
                    "quantity_from_recent_received",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "quantity_from_new_shipment",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "fnsku",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=API.models.ServiceDetail.pdf_directory_path_fnksu,
                    ),
                ),
                (
                    "box_label",
                    models.FileField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=API.models.ServiceDetail.pdf_directory_path_fba,
                    ),
                ),
                (
                    "placed_date",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "active_service_start_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("dispute", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "dispute_note",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("bundle", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "packing_instructions",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("pallet", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "bin_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="API.bin",
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_category_id",
                        to="API.ordercategory",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_item_id",
                        to="API.item",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_service_code",
                        to="API.servicecategory",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("service_id", "service_code", "item_id", "category_id")
                },
            },
        ),
        migrations.CreateModel(
            name="ServiceDetailHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_id", models.CharField(max_length=20)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                ("placed_date", models.DateTimeField()),
                (
                    "active_service_start_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "service_provided_date",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("from_inventory", models.BooleanField(default=False)),
                ("dispute", models.BooleanField(default=False)),
                ("dispute_note", models.CharField(max_length=100, null=True)),
                ("bundle", models.BooleanField(default=False, null=True)),
                ("order_notes", models.CharField(max_length=100, null=True)),
                ("pallet", models.BooleanField(default=False, null=True)),
                (
                    "category_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_history_category_id",
                        to="API.ordercategory",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_history_client_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_history_item_id",
                        to="API.item",
                    ),
                ),
                (
                    "service_code",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Service_detail_history_service_code",
                        to="API.servicecategory",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("service_id", "service_code", "item_id", "category_id")
                },
            },
        ),
    ]
